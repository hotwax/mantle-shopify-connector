<?xml version="1.0" encoding="UTF-8"?>
<entity-facade-xml type="seed">
    <!--    DbResource of Shopify GraphQL Templates-->
    <moqui.resource.DbResource filename="shopify" isFile="N" resourceId="Shopify" parentResourceId=""/>
    <moqui.resource.DbResource filename="template" isFile="N" resourceId="Template" parentResourceId="Shopify"/>
    <moqui.resource.DbResource filename="graphQL" isFile="N" resourceId="GraphQL" parentResourceId="Template"/>
    <moqui.resource.DbResource filename="OrderHeaderByIdQuery.ftl" isFile="Y" resourceId="OrderHeaderByIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                query{
                    node(id: "${shopifyOrderId}") {
                        id
                        ... on
                        Order {
                            id
                            name
                            updatedAt
                            cancelledAt
                            createdAt                                                       
                            displayFulfillmentStatus
                            returnStatus
                            taxesIncluded
                            phone
                            email
                            tags
                            note
                            statusPageUrl
                            currencyCode
                            presentmentCurrencyCode
                            customer {
                                id
                                firstName
                                lastName
                            }
                            channelInformation {
                                channelId
                                channelDefinition {
                                    handle
                                }
                            }
                            customAttributes {
                                key
                                value
                            }
                            shippingAddress {
                                name
                                address1
                                address2
                                city
                                zip
                                provinceCode
                                countryCodeV2
                                latitude
                                longitude
                                phone
                            }
                            billingAddress {
                                firstName
                                lastName
                                address1
                                address2
                                city
                                zip
                                provinceCode
                                countryCodeV2
                                latitude
                                longitude
                                phone
                            }
                            totalPriceSet {
                                presentmentMoney {
                                    amount
                                    currencyCode
                                }
                            }
                            originalTotalPriceSet {
                                presentmentMoney {
                                    amount
                                    currencyCode
                                }
                            }
                            currentTotalPriceSet {
                                presentmentMoney {
                                    amount
                                    currencyCode
                                }
                            }
                            totalTipReceivedSet {
                                presentmentMoney {
                                    amount
                                    currencyCode
                                }
                            }
                            transactions {
                                id
                                parentTransaction {
                                    id
                                }
                                kind
                                status
                                processedAt
                                amountSet {
                                    presentmentMoney {
                                        amount
                                        currencyCode
                                    }
                                    shopMoney {
                                        amount
                                        currencyCode
                                    }
                                }
                                gateway
                                paymentDetails {
                                    ... on CardPaymentDetails {
                                        company
                                    }
                                }
                                receiptJson
                            }
                        }
                    }
                }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="OrderLineItemByIdQuery.ftl" isFile="Y" resourceId="OrderLineItemByIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                query {
                    node(id: "${shopifyOrderId}") {
                        id
                        ... on
                        Order {
                            id
                            name
                            lineItems (first: 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                edges {
                                    node {
                                        id
                                        variant {
                                            id
                                            barcode
                                            sku
                                        }
                                        quantity
                                        currentQuantity
                                        fulfillableQuantity
                                        fulfillmentStatus
                                        nonFulfillableQuantity
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    }
                }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="ReturnHeaderByIdQuery.ftl" isFile="Y" resourceId="ReturnHeaderByIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                query{
                    node(id: "${returnId}") {
                        id
                        ... on
                        Return {
                            id
                            status
                            name
                            order {
                                id
                            }
                        }
                    }
                }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="RefundHeaderByIdQuery.ftl" isFile="Y" resourceId="RefundHeaderByIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                query{
                    node(id: "${refundId}") {
                        id
                        ... on
                        Refund {
                            id
                            createdAt
                            note
                            order {
                                id
                                name
                                customer{
                                    id
                                }
                            }
                            return {
                                id
                            }
                        }
                    }
                }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="ReturnLineItemByIdQuery.ftl" isFile="Y" resourceId="ReturnLineItemByIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                query{
                    node(id: "${returnId}") {
                        id
                        ... on
                        Return{
                            id
                            returnLineItems (first: 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                edges {
                                    node {
                                        ... on ReturnLineItem {
                                            id
                                            returnReason
                                            returnReasonNote
                                            fulfillmentLineItem {
                                                lineItem {
                                                    id
                                                    sku
                                                    quantity
                                                    product {
                                                        id
                                                    }
                                                }
                                            }
                                            quantity
                                            withCodeDiscountedTotalPriceSet {
                                                presentmentMoney {
                                                    amount
                                                    currencyCode
                                                }
                                            }
                                        }
                                    }
                                }
                                pageInfo{
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    }
                }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="ExchangeLineItemByIdQuery.ftl" isFile="Y" resourceId="ExchangeLineItemByIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                query{
                    node(id: "${returnId}"){
                        id
                        ... on
                        Return{
                            id
                            exchangeLineItems (first: 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                edges{
                                    node{
                                        id
                                        lineItem {
                                            id
                                            quantity
                                            sku
                                            variantTitle
                                            product {
                                                id
                                                title
                                            }
                                            originalUnitPriceSet {
                                                presentmentMoney {
                                                    amount
                                                    currencyCode
                                                }
                                            }
                                            originalTotalSet {
                                                presentmentMoney {
                                                    amount
                                                    currencyCode
                                                }
                                            }
                                            discountedUnitPriceSet {
                                                presentmentMoney {
                                                    amount
                                                    currencyCode
                                                }
                                            }
                                            discountedUnitPriceAfterAllDiscountsSet {
                                                presentmentMoney {
                                                    amount
                                                    currencyCode
                                                }
                                            }
                                            discountAllocations {
                                                allocatedAmountSet {
                                                    presentmentMoney {
                                                        amount
                                                        currencyCode
                                                    }
                                                }
                                            }
                                            taxLines {
                                                priceSet {
                                                    presentmentMoney {
                                                        amount
                                                        currencyCode
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                pageInfo{
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    }
                }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="ReturnsByOrderIDQuery.ftl" isFile="Y" resourceId="ReturnsByOrderIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                query{
                    node(id: "${shopifyOrderId}") {
                        id
                        ... on
                        Order {
                            id
                            name
                            returns (first: 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                edges {
                                    node {
                                        id
                                    }
                                }
                                pageInfo{
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    }
                }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="FulfillmentOrdersByOrderIdQuery.ftl" isFile="Y" resourceId="FulfillmentOrdersByOrderIdQuery"
                               parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                query{
                    node(id: "${shopifyOrderId}") {
                        id
                        ... on
                        Order {
                            id
                            name
                            fulfillmentOrders (first: 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                edges {
                                    node {
                                        id
                                    }
                                }
                                pageInfo{
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    }
                }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="FulfillmentOrderHeaderByIdQuery.ftl" isFile="Y" resourceId="FulfillmentOrderHeaderByIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                query{
                    node(id: "${fulfillmentOrderId}") {
                        id
                        ... on
                        FulfillmentOrder {
                            id
                            orderId
                            status
                            createdAt
                            updatedAt
                            fulfillAt
                            channelId
                            assignedLocation {
                                location {
                                    id
                                }
                            }
                            deliveryMethod {
                                methodType
                                serviceCode
                            }
                            createdAt                            
                        }
                    }
                }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="FulfillmentOrderLineItemsByIdQuery.ftl" isFile="Y" resourceId="FulfillmentOrderLineItemsByIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                query{
                    node(id: "${fulfillmentOrderId}") {
                        id
                        ... on
                        FulfillmentOrder {
                            id
                            lineItems (first : 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                edges{
                                    node {
                                        id
                                        totalQuantity
                                        remainingQuantity
                                        lineItem {
                                            id
                                            sku
                                            variant {
                                                id
                                                barcode
                                                title
                                            }
                                            originalUnitPriceSet {
                                                presentmentMoney {
                                                    amount
                                                }
                                            }
                                            quantity
                                            nonFulfillableQuantity
                                            customAttributes {
                                                key
                                                value
                                            }
                                            taxLines {
                                                title
                                                ratePercentage
                                                priceSet {
                                                    presentmentMoney {
                                                        amount
                                                        currencyCode
                                                    }
                                                }
                                            }
                                            discountAllocations {
                                                allocatedAmountSet {
                                                    presentmentMoney {
                                                        amount
                                                        currencyCode
                                                    }
                                                }
                                                discountApplication {
                                                    ... on DiscountCodeApplication {
                                                        code
                                                        value {
                                                            ... on PricingPercentageValue {
                                                                percentage
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                pageInfo{
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    }
                }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="ReturnedOrderIdsQuery.ftl" isFile="Y" resourceId="ReturnedOrderIdsQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND return_status:'RETURNED'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "updated_at:<'${queryParams.thruDate}' AND return_status:'RETURNED'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND updated_at:<'${queryParams.thruDate}' AND return_status:'RETURNED'"/>
                        </#if>
                        <#if !filterQuery?has_content>
                            <#assign filterQuery = "return_status:'RETURNED'"/>
                        </#if>
                        query {
                            orders (first: 100<#if cursor?has_content>, after: "${cursor}"</#if><#if filterQuery?has_content>, query: "${filterQuery}"</#if>) {
                                edges {
                                    node {
                                        id
                                        name
                                        returnStatus
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    </@compress>
                ]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="AppeasementIdsQuery.ftl" isFile="Y" resourceId="AppeasementIdsQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND (financial_status:'PARTIALLY_REFUNDED' OR financial_status:'REFUNDED')"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "updated_at:<'${queryParams.thruDate}' AND (financial_status:'PARTIALLY_REFUNDED' OR financial_status:'REFUNDED')"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND updated_at:<'${queryParams.thruDate}' AND (financial_status:'PARTIALLY_REFUNDED' OR financial_status:'REFUNDED')"/>
                        </#if>
                        <#if !filterQuery?has_content>
                            <#assign filterQuery = "financial_status:'PARTIALLY_REFUNDED' OR financial_status:'REFUNDED'"/>
                        </#if>
                        query {
                            orders (first: 100<#if cursor?has_content>, after: "${cursor}"</#if><#if filterQuery?has_content>, query: "${filterQuery}"</#if>) {
                                edges {
                                    node {
                                        id
                                        name
                                        refunds {
                                            id
                                        }
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    </@compress>
                ]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="RefundIdsByReturnIdQuery.ftl" isFile="Y" resourceId="RefundIdsByReturnIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        query{
                            node(id: "${returnId}") {
                                id
                                ... on
                                Return {
                                    refunds (first: 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                        edges {
                                            node {
                                                id
                                                createdAt
                                                totalRefundedSet {
                                                    presentmentMoney {
                                                        amount
                                                        currencyCode
                                                    }
                                                }
                                            }
                                        }
                                        pageInfo {
                                            endCursor
                                            hasNextPage
                                        }
                                    }
                                }
                            }
                        }
                    </@compress>
                ]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="RefundLineItemsByIdQuery.ftl" isFile="Y" resourceId="RefundLineItemsByIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        query {
                            node(id: "${shopifyRefundId}") {
                                id
                                ... on
                                Refund {
                                    id
                                    refundLineItems (first : 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                        edges {
                                            node {
                                                lineItem {
                                                    id
                                                    variant {
                                                        id
                                                    }
                                                }
                                                location {
                                                    id
                                                }
                                                restockType
                                                quantity
                                                totalTaxSet{
                                                    presentmentMoney{
                                                        amount
                                                        currencyCode
                                                    },
                                                    shopMoney{
                                                        currencyCode
                                                        amount
                                                    }
                                                }
                                            }
                                        }
                                        pageInfo {
                                            hasNextPage
                                            endCursor
                                        }
                                    }
                                }
                            }
                        }
                    </@compress>
                ]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="RefundTransactionsByIdQuery.ftl" isFile="Y" resourceId="RefundTransactionsByIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        query {
                            node(id: "${shopifyRefundId}") {
                                id
                                ... on
                                Refund {
                                    id
                                    transactions (first : 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                        edges {
                                            node {
                                                id
                                                parentTransaction {
                                                    id
                                                }
                                                status
                                                amountSet {
                                                    presentmentMoney {
                                                        amount
                                                        currencyCode
                                                    }
                                                    shopMoney {
                                                        amount
                                                        currencyCode
                                                    }
                                                }
                                                kind
                                                gateway
                                                paymentDetails {
                                                    ... on CardPaymentDetails {
                                                        company
                                                    }
                                                }
                                            }
                                        }
                                        pageInfo {
                                            endCursor
                                            hasNextPage
                                        }
                                    }
                                }
                            }
                        }
                    </@compress>
                ]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="RefundShippingLinesByIdQuery.ftl" isFile="Y" resourceId="RefundShippingLinesByIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        query {
                            node(id: "${shopifyRefundId}") {
                                id
                                ... on
                                Refund {
                                    id
                                    refundShippingLines (first : 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                        edges {
                                            node{
                                                id
                                                subtotalAmountSet{
                                                    presentmentMoney{
                                                        currencyCode
                                                        amount
                                                    }
                                                    shopMoney{
                                                        currencyCode
                                                        amount
                                                    }
                                                }
                                                taxAmountSet{
                                                    presentmentMoney{
                                                        currencyCode
                                                        amount
                                                    }
                                                    shopMoney{
                                                        currencyCode
                                                        amount
                                                    }
                                                }
                                            }
                                        }
                                        pageInfo {
                                            endCursor
                                            hasNextPage
                                        }
                                    }
                                }
                            }
                        }
                    </@compress>
                ]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="ReverseFulfillmentOrdersByIdQuery.ftl" isFile="Y" resourceId="ReverseFulfillmentOrdersByIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                query{
                    node(id: "${returnId}") {
                        id
                        ... on
                        Return {
                            id
                            reverseFulfillmentOrders (first: 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                edges {
                                    node {
                                        id
                                        status
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    }
                }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="ReverseFulfillmentOrderLineItemsByIdQuery.ftl" isFile="Y" resourceId="ReverseLineItemsByIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                query{
                    node(id: "${reverseFulfillmentOrderId}") {
                        id
                        ... on
                        ReverseFulfillmentOrder {
                            id
                            lineItems (first: 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                edges {
                                    node {
                                        fulfillmentLineItem {
                                            lineItem {
                                                id
                                            }
                                        }
                                        dispositions {
                                            location {
                                                id
                                            }
                                            type
                                            quantity
                                        }
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    }
                }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="OrderIdsByTagQuery.ftl" isFile="Y" resourceId="OrderIdsByTagQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND tag:'${queryParams.tag}'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "updated_at:<'${queryParams.thruDate}' AND tag:'${queryParams.tag}'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND updated_at:<'${queryParams.thruDate}' AND tag:'${queryParams.tag}'"/>
                        </#if>
                        <#if !filterQuery?has_content>
                            <#assign filterQuery = "tag:'${queryParams.tag}'"/>
                        </#if>
                        <#if queryParams.tagNot?has_content>
                            <#assign filterQuery = filterQuery + "AND tag_not:'${queryParams.tagNot}'"/>
                        </#if>
                        query {
                            orders (first: 100<#if cursor?has_content>, after: "${cursor}"</#if><#if filterQuery?has_content>, query: "${filterQuery}"</#if>) {
                                edges {
                                    node {
                                        id
                                        name
                                        tags
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    </@compress>
                ]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="UpdateOrderTags.ftl" isFile="Y" resourceId="UpdateOrderTags" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                mutation orderUpdate($input: OrderInput!) {
                    orderUpdate(input: $input) {
                        order {
                            id
                            tags
                        }
                        userErrors {
                            field
                            message
                        }
                    }
                }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="BulkProductMetaFieldByTagsQuery.ftl" isFile="Y" resourceId="BulkProductMetaFieldByTagsQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                    <#if queryParams?has_content>
                        <#if queryParams.namespace?has_content>
                            <#assign namespace = queryParams.namespace/>
                        </#if>
                        <#if queryParams.filterQuery?has_content>
                            <#assign filterQuery = queryParams.filterQuery/>
                        <#else>
                            <#if queryParams.filterCondition?has_content>
                                <#assign filterCondition = queryParams.filterCondition/>
                            </#if>
                            <#if queryParams.fromDateLabel?has_content>
                                <#assign fromDateLabel = queryParams.fromDateLabel/>
                            <#else>
                                <#assign fromDateLabel = "updated_at"/>
                            </#if>
                            <#if queryParams.thruDateLabel?has_content>
                                <#assign thruDateLabel = queryParams.thruDateLabel/>
                            <#else>
                                <#assign thruDateLabel = "updated_at"/>
                            </#if>
                            <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                                <#assign filterQuery = "${filterCondition} AND ${fromDateLabel}:>'${queryParams.fromDate}'"/>
                            </#if>
                            <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                                <#assign filterQuery = "${filterCondition} AND ${thruDateLabel}:<'${queryParams.thruDate}'"/>
                            </#if>
                            <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                                <#assign filterQuery = "${filterCondition} AND ${fromDateLabel}:>'${queryParams.fromDate}' AND ${thruDateLabel}:<'${queryParams.thruDate}'"/>
                            </#if>
                        </#if>
                    </#if>
                    mutation {
                        bulkOperationRunQuery(
                            query: """ {
                                products <#if filterQuery?has_content>(query:"${filterQuery}")</#if> {
                                    edges {
                                        node {
                                            id
                                            variants{
                                                edges{
                                                    node{
                                                        id
                                                    }
                                                }
                                            }
                                            metafields <#if namespace?has_content>(namespace:"${namespace}")</#if> {
                                                edges{
                                                    node{
                                                        id
                                                        key
                                                        value
                                                        createdAt
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        """ ) {
                            bulkOperation {
                                id
                                status
                            }
                            userErrors {
                                field
                                message
                            }
                        }
                    }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="UpdatedOrderIdsQuery.ftl" isFile="Y" resourceId="UpdatedOrderIdsQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "updated_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND updated_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        query {
                            orders (first: 100<#if cursor?has_content>, after: "${cursor}"</#if><#if filterQuery?has_content>, query: "${filterQuery}"</#if>) {
                                edges {
                                    node {
                                        id
                                        name
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    </@compress>
                ]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="BulkFulfillmentOrderQuery.ftl" isFile="Y" resourceId="BulkFulfillmentOrderQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
            <@compress single_line=true>
                <#if queryParams?has_content>
                    <#if queryParams.filterQuery?has_content>
                        <#assign filterQuery = queryParams.filterQuery/>
                    <#else>
                        <#if queryParams.fromDateLabel?has_content>
                            <#assign fromDateLabel = queryParams.fromDateLabel/>
                        <#else>
                            <#assign fromDateLabel = "created_at"/>
                        </#if>
                        <#if queryParams.thruDateLabel?has_content>
                            <#assign thruDateLabel = queryParams.thruDateLabel/>
                        <#else>
                            <#assign thruDateLabel = "created_at"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "${fromDateLabel}:>'${queryParams.fromDate}'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "${thruDateLabel}:<'${queryParams.thruDate}'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "${fromDateLabel}:>'${queryParams.fromDate}' AND ${thruDateLabel}:<'${queryParams.thruDate}'"/>
                        </#if>
                    </#if>
                </#if>
                mutation {
                    bulkOperationRunQuery(
                        query: """ {
                            orders <#if filterQuery?has_content>(query:"${filterQuery}")</#if> {
                                edges {
                                    node {
                                        id
                                        fulfillmentOrders {
                                            edges{
                                                node{
                                                    id
                                                    status
                                                    assignedLocation{
                                                        location{
                                                            id
                                                        }
                                                    }
                                                    lineItems {
                                                        edges{
                                                            node{
                                                                id
                                                                remainingQuantity
                                                                lineItem{
                                                                    id
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    """ ) {
                        bulkOperation {
                            id
                            status
                        }
                        userErrors {
                            field
                            message
                        }
                    }
                }
            </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="ExchangesByOrderIdQuery.ftl" isFile="Y" resourceId="ExchangesByOrderIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                    <@compress single_line=true>
                        query {
                            node(id: "${shopifyOrderId}") {
                                id
                                ... on
                                Order {
                                   id
                                    name
                                    exchangeV2s (first: 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                        edges {
                                            node {
                                                id
                                                completedAt
                                                location {
                                                    id
                                                }
                                                additions {
                                                    totalPriceSet {
                                                        presentmentMoney {
                                                            amount
                                                            currencyCode
                                                        }
                                                    }
                                                    lineItems {
                                                        lineItem {
                                                            id
                                                            quantity
                                                            sku
                                                            variantTitle
                                                            isGiftCard
                                                            product {
                                                                id
                                                                title
                                                            }
                                                            originalUnitPriceSet {
                                                                presentmentMoney {
                                                                    amount
                                                                    currencyCode
                                                                }
                                                            }
                                                            originalTotalSet {
                                                                presentmentMoney {
                                                                    amount
                                                                    currencyCode
                                                                }
                                                            }
                                                            discountedUnitPriceSet {
                                                                presentmentMoney {
                                                                    amount
                                                                    currencyCode
                                                                }
                                                            }
                                                            discountedUnitPriceAfterAllDiscountsSet {
                                                                presentmentMoney {
                                                                    currencyCode
                                                                    amount
                                                                }
                                                            }
                                                            discountedTotalSet {
                                                                presentmentMoney {
                                                                    amount
                                                                    currencyCode
                                                                }
                                                            }
                                                            discountAllocations {
                                                                allocatedAmountSet {
                                                                    presentmentMoney {
                                                                        amount
                                                                        currencyCode
                                                                    }
                                                                }
                                                            }
                                                            taxLines {
                                                                priceSet {
                                                                    presentmentMoney {
                                                                        amount
                                                                        currencyCode
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                refunds {
                                                    id
                                                    totalRefundedSet {
                                                        presentmentMoney {
                                                            amount
                                                            currencyCode
                                                        }
                                                    }
                                                    return {
                                                        id
                                                    }
                                                }
                                                totalAmountProcessedSet {
                                                    presentmentMoney {
                                                        amount
                                                        currencyCode
                                                    }
                                                }
                                                totalPriceSet {
                                                    presentmentMoney {
                                                        amount
                                                        currencyCode
                                                    }    
                                                }
                                                transactions {
                                                    id
                                                    parentTransaction {
                                                        id
                                                    }
                                                    kind
                                                    status
                                                    processedAt
                                                    amountSet {
                                                        presentmentMoney {
                                                            amount
                                                            currencyCode
                                                        }
                                                        shopMoney {
                                                            amount
                                                            currencyCode
                                                        }
                                                    }
                                                    gateway
                                                    paymentDetails {
                                                        ... on CardPaymentDetails {
                                                            company
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        pageInfo{
                                            endCursor
                                            hasNextPage
                                        }
                                    }
                                }
                            }
                        }
                    </@compress>
                ]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="NewProductIdsQuery.ftl" isFile="Y" resourceId="NewProductIdsQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "created_at:>'${queryParams.fromDate}'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "created_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "created_at:>'${queryParams.fromDate}' AND created_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        query {
                            products (first: 100<#if cursor?has_content>, after: "${cursor}"</#if><#if filterQuery?has_content>, query: "${filterQuery}"</#if>) {
                                edges {
                                    node {
                                        id
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    </@compress>
                ]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="UpdatedProductIdsQuery.ftl" isFile="Y" resourceId="UpdatedProductIdsQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "updated_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND updated_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        query {
                            products (first: 100<#if cursor?has_content>, after: "${cursor}"</#if><#if filterQuery?has_content>, query: "${filterQuery}"</#if>) {
                                edges {
                                    node {
                                        id
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    </@compress>
                ]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="ProductByIdQuery.ftl" isFile="Y" resourceId="ProductByIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                    query {
                        node(id: "${shopifyProductId}") {
                            id
                            ... on
                            Product {
                                id
                                handle
                                title
                                isGiftCard
                                productType
                                vendor
                                category {
                                    id
                                    name
                                    fullName
                                }
                                hasVariantsThatRequiresComponents
                                featuredMedia {
                                    mediaContentType
                                    preview {
                                        image {
                                            url
                                        }
                                    }
                                }
                                options {
                                    id
                                    name
                                    position
                                    optionValues {
                                        id
                                        name
                                    }
                                }
                                tags
                            }
                        }
                    }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="ProductVariantsByProductIdQuery.ftl" isFile="Y" resourceId="ProductVariantsByProductIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                    query {
                        node (id: "${shopifyProductId}") {
                            id
                            ... on
                            Product {
                                id
                                variants (first: 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                    edges {
                                        node {
                                            id
                                            title
                                            sku
                                            barcode
                                            product {
                                                id
                                                handle
                                                title
                                                isGiftCard
                                                productType
                                                vendor
                                            }
                                            price
                                            compareAtPrice
                                            position
                                            requiresComponents
                                            image {
                                                url
                                            }
                                            selectedOptions {
                                                name
                                                value
                                            }
                                            inventoryItem {
                                                id
                                                requiresShipping
                                                measurement {
                                                    weight {
                                                        unit
                                                        value
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    pageInfo {
                                        hasNextPage
                                        endCursor
                                    }
                                }
                            }
                        }
                    }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="ShippingLinesByOrderIdQuery.ftl" isFile="Y" resourceId="ShippingLinesByOrderIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                query {
                    node(id: "${shopifyOrderId}") {
                        id
                        ... on
                        Order {
                            id
                            shippingLines (first: 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                edges {
                                    node {
                                        title
                                        originalPriceSet {
                                            presentmentMoney {
                                                amount
                                                currencyCode
                                            }
                                        }
                                        discountAllocations {
                                            allocatedAmountSet {
                                                presentmentMoney {
                                                    amount
                                                    currencyCode
                                                }
                                            }
                                            discountApplication {
                                                ... on DiscountCodeApplication {
                                                    code
                                                    targetType
                                                    value {
                                                        ... on PricingPercentageValue {
                                                            percentage
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        taxLines {
                                            title
                                            priceSet {
                                                presentmentMoney {
                                                    amount
                                                    currencyCode
                                                }
                                            }
                                        }
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    }
                }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="NewOrderIdsQuery.ftl" isFile="Y" resourceId="NewOrderIdsQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "created_at:>'${queryParams.fromDate}'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "created_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "created_at:>'${queryParams.fromDate}' AND created_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        query {
                            orders (first: 100<#if cursor?has_content>, after: "${cursor}"</#if><#if filterQuery?has_content>, query: "${filterQuery}"</#if>) {
                                edges {
                                    node {
                                        id
                                        name
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    </@compress>
                ]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="UpdatedAgreementOrderIdsFeed.ftl" isFile="Y" resourceId="UpdatedAgreementOrderIdsFeed" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "updated_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND updated_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        query {
                            orders (first: 100<#if cursor?has_content>, after: "${cursor}"</#if><#if filterQuery?has_content>, query: "${filterQuery}"</#if>) {
                                edges {
                                    node {
                                        id
                                        name
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    </@compress>
                ]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="AgreementsByOrderIdQuery.ftl" isFile="Y" resourceId="AgreementsByOrderIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "happened_at:>'${queryParams.fromDate}'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "happened_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "happened_at:>'${queryParams.fromDate}' AND happened_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        query {
                            node(id: "${shopifyOrderId}") {
                                id
                                ... on
                                Order {
                                    agreements (first: 250<#if cursor?has_content>, after: "${cursor}"</#if><#if filterQuery?has_content>, query: "${filterQuery}"</#if>) {
                                        edges {
                                            node {
                                                id
                                                reason
                                                happenedAt
                                                app {
                                                    handle
                                                    title
                                                    shopifyDeveloped
                                                }
                                                user {
                                                    id
                                                    firstName
                                                    lastName
                                                }
                                                sales (first: 250) {
                                                    edges {
                                                        node {
                                                            actionType
                                                            lineType
                                                            quantity
                                                            totalAmount {
                                                                presentmentMoney {
                                                                    amount
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        pageInfo {
                                            endCursor
                                            hasNextPage
                                        }
                                    }
                                }
                            }
                        }
                    </@compress>
                ]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="ProductMetaFieldsByNameSpaceQuery.ftl" isFile="Y" resourceId="ProductMetaFieldsByNameSpaceQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                    query
                    {
                        node(id: "${shopifyProductId}") {
                            id
                                ... on
                                Product {
                                    id
                                    metafields(namespace: "${namespace}", first: 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                        edges{
                                            node{
                                                id
                                                key
                                                namespace
                                                value
                                                type
                                                reference {
                                                    ... on Metaobject {
                                                        id
                                                        handle
                                                        type
                                                        fields {
                                                            key
                                                            value
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        pageInfo{
                                            hasNextPage
                                            endCursor
                                        }
                                    }
                                }
                            }
                    }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="FulfillmentOrderIdsQuery.ftl" isFile="Y" resourceId="FulfillmentOrderIdsQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "updated_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND updated_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        query {
                            fulfillmentOrders (first: 100, includeClosed: true<#if cursor?has_content>, after: "${cursor}"</#if>, query: "status:'CLOSED'<#if filterQuery?has_content> AND ${filterQuery}"</#if>) {
                                edges {
                                    node {
                                        id
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    </@compress>
                ]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResource filename="ProductVariantUpdatesQuery.ftl" isFile="Y" resourceId="ProductVariantUpdatesQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "updated_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND updated_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        query
                        {
                            productVariants(first: 250<#if cursor?has_content>, after: "${cursor}"</#if>, <#if filterQuery?has_content>, query: "${filterQuery}"</#if>) {
                                edges {
                                    node {
                                        id
                                        sku
                                        barcode
                                        updatedAt
                                        product {
                                            id
                                            handle
                                        }
                                        inventoryItem {
                                            id
                                        }
                                    }
                                }
                                pageInfo {
                                    hasNextPage
                                    endCursor
                                }
                            }
                        }
                    </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
</entity-facade-xml>