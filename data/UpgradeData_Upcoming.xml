<?xml version="1.0" encoding="UTF-8"?>

<entity-facade-xml type="ext-upgrade-upcoming">
    <moqui.resource.DbResource filename="ProductMetaFieldsByNameSpaceQuery.ftl" isFile="Y" resourceId="ProductMetaFieldsByNameSpaceQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                    query
                    {
                        node(id: "${shopifyProductId}") {
                            id
                                ... on
                                Product {
                                    id
                                    metafields(namespace: "${namespace}", first: 10<#if cursor?has_content>, after: "${cursor}"</#if>) {
                                        edges{
                                            node{
                                                id
                                                key
                                                namespace
                                                value
                                                type
                                                reference {
                                                    ... on Metaobject {
                                                        id
                                                        handle
                                                        type
                                                        fields {
                                                            key
                                                            value
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        pageInfo{
                                            hasNextPage
                                            endCursor
                                        }
                                    }
                                }
                            }
                    }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
    <moqui.resource.DbResourceFile resourceId="ReturnedOrderIdsQuery">
        <fileData>
            <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND return_status:'RETURNED'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "updated_at:<'${queryParams.thruDate}' AND return_status:'RETURNED'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND updated_at:<'${queryParams.thruDate}' AND return_status:'RETURNED'"/>
                        </#if>
                        <#if !filterQuery?has_content>
                            <#assign filterQuery = "return_status:'RETURNED'"/>
                        </#if>
                        query {
                            orders (first: 100<#if cursor?has_content>, after: "${cursor}"</#if><#if filterQuery?has_content>, query: "${filterQuery}"</#if>) {
                                edges {
                                    node {
                                        id
                                        name
                                        returnStatus
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    </@compress>
                ]]>
        </fileData>
    </moqui.resource.DbResourceFile>
    <moqui.resource.DbResourceFile resourceId="OrderIdsByTagQuery">
        <fileData>
            <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND tag:'${queryParams.tag}'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "updated_at:<'${queryParams.thruDate}' AND tag:'${queryParams.tag}'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND updated_at:<'${queryParams.thruDate}' AND tag:'${queryParams.tag}'"/>
                        </#if>
                        <#if !filterQuery?has_content>
                            <#assign filterQuery = "tag:'${queryParams.tag}'"/>
                        </#if>
                        <#if queryParams.tagNot?has_content>
                            <#assign filterQuery = filterQuery + "AND tag_not:'${queryParams.tagNot}'"/>
                        </#if>
                        query {
                            orders (first: 100<#if cursor?has_content>, after: "${cursor}"</#if><#if filterQuery?has_content>, query: "${filterQuery}"</#if>) {
                                edges {
                                    node {
                                        id
                                        name
                                        tags
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    </@compress>
                ]]>
        </fileData>
    </moqui.resource.DbResourceFile>
    <moqui.resource.DbResourceFile resourceId="UpdatedOrderIdsQuery">
        <fileData>
            <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "updated_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND updated_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        query {
                            orders (first: 100<#if cursor?has_content>, after: "${cursor}"</#if><#if filterQuery?has_content>, query: "${filterQuery}"</#if>) {
                                edges {
                                    node {
                                        id
                                        name
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    </@compress>
                ]]>
        </fileData>
    </moqui.resource.DbResourceFile>
    <moqui.resource.DbResourceFile resourceId="NewProductIdsQuery">
        <fileData>
            <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "created_at:>'${queryParams.fromDate}'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "created_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "created_at:>'${queryParams.fromDate}' AND created_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        query {
                            products (first: 100<#if cursor?has_content>, after: "${cursor}"</#if><#if filterQuery?has_content>, query: "${filterQuery}"</#if>) {
                                edges {
                                    node {
                                        id
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    </@compress>
                ]]>
        </fileData>
    </moqui.resource.DbResourceFile>
    <moqui.resource.DbResourceFile resourceId="UpdatedProductIdsQuery">
        <fileData>
            <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "updated_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "updated_at:>'${queryParams.fromDate}' AND updated_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        query {
                            products (first: 100<#if cursor?has_content>, after: "${cursor}"</#if><#if filterQuery?has_content>, query: "${filterQuery}"</#if>) {
                                edges {
                                    node {
                                        id
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    </@compress>
                ]]>
        </fileData>
    </moqui.resource.DbResourceFile>
    <moqui.resource.DbResourceFile resourceId="NewOrderIdsQuery">
        <fileData>
            <![CDATA[
                    <#ftl output_format="HTML">
                    <@compress single_line=true>
                        <#if queryParams.fromDate?has_content && !queryParams.thruDate?has_content>
                            <#assign filterQuery = "created_at:>'${queryParams.fromDate}'"/>
                        </#if>
                        <#if queryParams.thruDate?has_content && !queryParams.fromDate?has_content>
                            <#assign filterQuery = "created_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        <#if queryParams.fromDate?has_content && queryParams.thruDate?has_content>
                            <#assign filterQuery = "created_at:>'${queryParams.fromDate}' AND created_at:<'${queryParams.thruDate}'"/>
                        </#if>
                        query {
                            orders (first: 100<#if cursor?has_content>, after: "${cursor}"</#if><#if filterQuery?has_content>, query: "${filterQuery}"</#if>) {
                                edges {
                                    node {
                                        id
                                        name
                                    }
                                }
                                pageInfo {
                                    endCursor
                                    hasNextPage
                                }
                            }
                        }
                    </@compress>
                ]]>
        </fileData>
    </moqui.resource.DbResourceFile>
</entity-facade-xml>
